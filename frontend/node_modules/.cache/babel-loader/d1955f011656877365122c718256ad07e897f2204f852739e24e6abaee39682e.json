{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishw\\\\Desktop\\\\Project1\\\\frontend\\\\src\\\\components\\\\UserDashboard\\\\ActivePolls.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActivePolls = () => {\n  _s();\n  const [polls, setPolls] = useState([]);\n  useEffect(() => {\n    // Simulate API fetch\n    setTimeout(() => {\n      setPolls([{\n        id: 1,\n        question: \"Which framework do you prefer?\",\n        options: [\"React\", \"Vue\", \"Angular\"]\n      }, {\n        id: 2,\n        question: \"What is your favorite color?\",\n        options: [\"Red\", \"Blue\", \"Green\"]\n      }]);\n    }, 500); // Simulating delay\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Active Polls\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), polls.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No active polls at the moment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: polls.map(poll => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: poll.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: poll.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)]\n      }, poll.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ActivePolls, \"KtzQibcdPE9p2pwVeAS/JhcPm48=\");\n_c = ActivePolls;\nexport default ActivePolls;\nvar _c;\n$RefreshReg$(_c, \"ActivePolls\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ActivePolls","_s","polls","setPolls","setTimeout","id","question","options","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","poll","option","index","_c","$RefreshReg$"],"sources":["C:/Users/vishw/Desktop/Project1/frontend/src/components/UserDashboard/ActivePolls.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst ActivePolls = () => {\r\n  const [polls, setPolls] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Simulate API fetch\r\n    setTimeout(() => {\r\n      setPolls([\r\n        {\r\n          id: 1,\r\n          question: \"Which framework do you prefer?\",\r\n          options: [\"React\", \"Vue\", \"Angular\"],\r\n        },\r\n        {\r\n          id: 2,\r\n          question: \"What is your favorite color?\",\r\n          options: [\"Red\", \"Blue\", \"Green\"],\r\n        },\r\n      ]);\r\n    }, 500); // Simulating delay\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Active Polls</h2>\r\n      {polls.length === 0 ? (\r\n        <p>No active polls at the moment.</p>\r\n      ) : (\r\n        <ul>\r\n          {polls.map((poll) => (\r\n            <li key={poll.id}>\r\n              <h3>{poll.question}</h3>\r\n              <ul>\r\n                {poll.options.map((option, index) => (\r\n                  <li key={index}>{option}</li>\r\n                ))}\r\n              </ul>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActivePolls;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACAQ,UAAU,CAAC,MAAM;MACfD,QAAQ,CAAC,CACP;QACEE,EAAE,EAAE,CAAC;QACLC,QAAQ,EAAE,gCAAgC;QAC1CC,OAAO,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,SAAS;MACrC,CAAC,EACD;QACEF,EAAE,EAAE,CAAC;QACLC,QAAQ,EAAE,8BAA8B;QACxCC,OAAO,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO;MAClC,CAAC,CACF,CAAC;IACJ,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBV,KAAK,CAACW,MAAM,KAAK,CAAC,gBACjBd,OAAA;MAAAS,QAAA,EAAG;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAErCb,OAAA;MAAAS,QAAA,EACGN,KAAK,CAACY,GAAG,CAAEC,IAAI,iBACdhB,OAAA;QAAAS,QAAA,gBACET,OAAA;UAAAS,QAAA,EAAKO,IAAI,CAACT;QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBb,OAAA;UAAAS,QAAA,EACGO,IAAI,CAACR,OAAO,CAACO,GAAG,CAAC,CAACE,MAAM,EAAEC,KAAK,kBAC9BlB,OAAA;YAAAS,QAAA,EAAiBQ;UAAM,GAAdC,KAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAc,CAC7B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA,GANEG,IAAI,CAACV,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACX,EAAA,CA1CID,WAAW;AAAAkB,EAAA,GAAXlB,WAAW;AA4CjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}