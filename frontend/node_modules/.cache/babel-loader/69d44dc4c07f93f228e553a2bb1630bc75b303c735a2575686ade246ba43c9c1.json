{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishw\\\\Desktop\\\\Project1\\\\frontend\\\\src\\\\components\\\\Polls\\\\PollResult.js\",\n  _s = $RefreshSig$();\n// PollResults.js\nimport React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nimport { pollData } from \"../../data\"; // relative path from the Polls folder to the data.js file in src\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PollResults() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const poll = pollData.find(poll => poll.id === parseInt(id));\n  if (!poll) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Poll not found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Back to Poll List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n  const totalVotes = poll.options.reduce((acc, option) => acc + option.votes, 0);\n\n  // Preparing data for the graph\n  const chartData = poll.options.map(option => ({\n    name: option.option,\n    votes: option.votes,\n    percentage: parseFloat((option.votes / totalVotes * 100).toFixed(2))\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Results for \", poll.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: poll.options.map(option => {\n        const percentage = (option.votes / totalVotes * 100).toFixed(2);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [option.option, \": \", option.votes, \" votes (\", percentage, \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: `${percentage}%`,\n              backgroundColor: \"green\",\n              height: \"20px\",\n              marginBottom: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, option.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Vote Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      width: 600,\n      height: 300,\n      data: chartData,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"votes\",\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"percentage\",\n        fill: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Back to Poll List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(PollResults, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = PollResults;\nexport default PollResults;\nvar _c;\n$RefreshReg$(_c, \"PollResults\");","map":{"version":3,"names":["React","useParams","Link","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","pollData","jsxDEV","_jsxDEV","PollResults","_s","id","poll","find","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","to","totalVotes","options","reduce","acc","option","votes","chartData","map","name","percentage","parseFloat","toFixed","title","style","width","backgroundColor","height","marginBottom","data","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","_c","$RefreshReg$"],"sources":["C:/Users/vishw/Desktop/Project1/frontend/src/components/Polls/PollResult.js"],"sourcesContent":["// PollResults.js\r\nimport React from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\nimport { pollData } from \"../../data\"; // relative path from the Polls folder to the data.js file in src\r\n\r\nfunction PollResults() {\r\n  const { id } = useParams();\r\n  const poll = pollData.find((poll) => poll.id === parseInt(id));\r\n\r\n  if (!poll) {\r\n    return (\r\n      <div>\r\n        <h2>Poll not found!</h2>\r\n        <Link to=\"/\">Back to Poll List</Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const totalVotes = poll.options.reduce(\r\n    (acc, option) => acc + option.votes,\r\n    0\r\n  );\r\n\r\n  // Preparing data for the graph\r\n  const chartData = poll.options.map((option) => ({\r\n    name: option.option,\r\n    votes: option.votes,\r\n    percentage: parseFloat(((option.votes / totalVotes) * 100).toFixed(2)),\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      <h2>Results for {poll.title}</h2>\r\n      <ul>\r\n        {poll.options.map((option) => {\r\n          const percentage = ((option.votes / totalVotes) * 100).toFixed(2);\r\n          return (\r\n            <li key={option.id}>\r\n              <p>\r\n                {option.option}: {option.votes} votes ({percentage}%)\r\n              </p>\r\n              <div\r\n                style={{\r\n                  width: `${percentage}%`,\r\n                  backgroundColor: \"green\",\r\n                  height: \"20px\",\r\n                  marginBottom: \"10px\",\r\n                }}\r\n              />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n\r\n      <h3>Vote Distribution</h3>\r\n      <BarChart\r\n        width={600}\r\n        height={300}\r\n        data={chartData}\r\n        margin={{\r\n          top: 20,\r\n          right: 30,\r\n          left: 20,\r\n          bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Bar dataKey=\"votes\" fill=\"#8884d8\" />\r\n        <Bar dataKey=\"percentage\" fill=\"#82ca9d\" />\r\n      </BarChart>\r\n\r\n      <Link to=\"/\">Back to Poll List</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PollResults;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}