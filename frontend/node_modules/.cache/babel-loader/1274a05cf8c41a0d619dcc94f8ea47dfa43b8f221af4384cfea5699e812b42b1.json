{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishw\\\\Desktop\\\\Project1\\\\frontend\\\\src\\\\components\\\\Polls\\\\PollResult.js\",\n  _s = $RefreshSig$();\n// PollResults.js\nimport React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { pollData } from \"../data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PollResults() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const poll = pollData.find(poll => poll.id === parseInt(id));\n  const totalVotes = poll.options.reduce((acc, option) => acc + option.votes, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Results for \", poll.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: poll.options.map(option => {\n        const percentage = (option.votes / totalVotes * 100).toFixed(2);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [option.option, \": \", option.votes, \" votes (\", percentage, \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: `${percentage}%`,\n              backgroundColor: \"green\",\n              height: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)]\n        }, option.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Back to Poll List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(PollResults, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = PollResults;\nexport default PollResults;\nvar _c;\n$RefreshReg$(_c, \"PollResults\");","map":{"version":3,"names":["React","useParams","Link","pollData","jsxDEV","_jsxDEV","PollResults","_s","id","poll","find","parseInt","totalVotes","options","reduce","acc","option","votes","children","title","fileName","_jsxFileName","lineNumber","columnNumber","map","percentage","toFixed","style","width","backgroundColor","height","to","_c","$RefreshReg$"],"sources":["C:/Users/vishw/Desktop/Project1/frontend/src/components/Polls/PollResult.js"],"sourcesContent":["// PollResults.js\r\nimport React from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { pollData } from \"../data\";\r\n\r\nfunction PollResults() {\r\n  const { id } = useParams();\r\n  const poll = pollData.find((poll) => poll.id === parseInt(id));\r\n\r\n  const totalVotes = poll.options.reduce(\r\n    (acc, option) => acc + option.votes,\r\n    0\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h2>Results for {poll.title}</h2>\r\n      <ul>\r\n        {poll.options.map((option) => {\r\n          const percentage = ((option.votes / totalVotes) * 100).toFixed(2);\r\n          return (\r\n            <li key={option.id}>\r\n              <p>\r\n                {option.option}: {option.votes} votes ({percentage}%)\r\n              </p>\r\n              <div\r\n                style={{\r\n                  width: `${percentage}%`,\r\n                  backgroundColor: \"green\",\r\n                  height: \"20px\",\r\n                }}\r\n              />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <Link to=\"/\">Back to Poll List</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PollResults;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,SAASC,QAAQ,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAMQ,IAAI,GAAGN,QAAQ,CAACO,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACD,EAAE,KAAKG,QAAQ,CAACH,EAAE,CAAC,CAAC;EAE9D,MAAMI,UAAU,GAAGH,IAAI,CAACI,OAAO,CAACC,MAAM,CACpC,CAACC,GAAG,EAAEC,MAAM,KAAKD,GAAG,GAAGC,MAAM,CAACC,KAAK,EACnC,CACF,CAAC;EAED,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,GAAI,cAAY,EAACT,IAAI,CAACU,KAAK;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjClB,OAAA;MAAAa,QAAA,EACGT,IAAI,CAACI,OAAO,CAACW,GAAG,CAAER,MAAM,IAAK;QAC5B,MAAMS,UAAU,GAAG,CAAET,MAAM,CAACC,KAAK,GAAGL,UAAU,GAAI,GAAG,EAAEc,OAAO,CAAC,CAAC,CAAC;QACjE,oBACErB,OAAA;UAAAa,QAAA,gBACEb,OAAA;YAAAa,QAAA,GACGF,MAAM,CAACA,MAAM,EAAC,IAAE,EAACA,MAAM,CAACC,KAAK,EAAC,UAAQ,EAACQ,UAAU,EAAC,IACrD;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACJlB,OAAA;YACEsB,KAAK,EAAE;cACLC,KAAK,EAAE,GAAGH,UAAU,GAAG;cACvBI,eAAe,EAAE,OAAO;cACxBC,MAAM,EAAE;YACV;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA,GAVKP,MAAM,CAACR,EAAE;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWd,CAAC;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLlB,OAAA,CAACH,IAAI;MAAC6B,EAAE,EAAC,GAAG;MAAAb,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV;AAAChB,EAAA,CAlCQD,WAAW;EAAA,QACHL,SAAS;AAAA;AAAA+B,EAAA,GADjB1B,WAAW;AAoCpB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}